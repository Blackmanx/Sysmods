#!/usr/bin/env python

import os
import sys
import pprint
import subprocess
import json

from distutils.spawn import find_executable

if len(sys.argv) < 2:
    sys.stderr.write("""usage: devid <command / device id>

    Commands:
        list        - list all devices in registry
        who         - list who's connected
        <device id> - echo the adb id for a deivce
    """)

    sys.exit(1)


device_registry = os.path.expanduser("~/.adb_device_registry.json")

adb_to_dev_name = json.load(file(device_registry))

dev_name_to_adb = dict(
        (V, K) for (K, V) in adb_to_dev_name.iteritems() )

arg = sys.argv[1]

if arg in adb_to_dev_name:
    print( adb_to_dev_name[arg] )

if arg in dev_name_to_adb:
    print( dev_name_to_adb[arg] )

if arg == "list":
    pprint.pprint( dev_name_to_adb )

if arg == "who" or arg == "who-tabbed":
    tabbed = arg == "who-tabbed" and "\t" or ""
    output = subprocess.check_output(["adb", "devices"])
    for line in output.splitlines():
        if line.endswith("device"):
            devid = line.split()[0]
            if devid in adb_to_dev_name:
                print tabbed + adb_to_dev_name[devid],
            print "(%s)" % (devid,)

def find_editor():
    try:
        editor = os.environ["EDITOR"]
        if os.path.exists(editor):
            return editor
    except KeyError:
        pass
    editor = find_executable("editor")
    if editor:
        return editor
    editor = find_executable("vi")
    if editor:
        return editor
    editor = find_executable("nano")
    if editor:
        return editor
    raise Exception("could not find an editor, set $EDITOR")

if arg == "edit":
    subprocess.call([find_editor(), device_registry])
